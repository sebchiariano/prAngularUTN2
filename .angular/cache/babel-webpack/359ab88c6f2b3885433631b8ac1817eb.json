{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from '@angular/fire/auth';\nimport { collection, query, where, getDocs } from '@angular/fire/firestore';\nimport 'rxjs/add/operator/switchMap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/fire/firestore\";\nexport let UsuariosService = /*#__PURE__*/(() => {\n  class UsuariosService {\n    constructor(afAuth, router, firestore) {\n      this.afAuth = afAuth;\n      this.router = router;\n      this.firestore = firestore;\n      this.authenticationState = new BehaviorSubject(localStorage.getItem(\"login\") ? true : false);\n      this.uidUser = localStorage.getItem(\"uidUser\");\n    }\n\n    login(email, password) {\n      signInWithEmailAndPassword(this.afAuth, email, password).then(value => {\n        this.authenticationState.next(true); //cambiar autenticacion estado a true\n\n        localStorage.setItem(\"login\", \"true\");\n        localStorage.setItem(\"uidUser\", value.user.uid);\n        console.log(\"data\", this.getUserData());\n        this.router.navigate(['/']);\n        this.uidUser = value.user.uid;\n      }).catch(err => {\n        console.log('Something went wrong: ', err.message);\n\n        if (err.code == \"auth/wrong-password\" || err.code == \"auth/user-not-found\") {\n          alert(\"El usuario o la contraseña ingresada son incorrectos\");\n        }\n      });\n    }\n\n    getUserData() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const q = query(collection(this.firestore, \"usuarios\"), where(\"userId\", \"==\", this.uidUser));\n        const querySnapshot = yield getDocs(q);\n        var userData;\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(\"usernombre\", doc.data().__zone_symbol__value.nombre);\n          console.log(\"userapellido\", doc.data().apellido);\n          userData.userId = doc.data().userId;\n          userData.nombre = doc.data().__zone_symbol__value.nombre;\n          userData.apellido = doc.data().__zone_symbol__value.apellido;\n          userData.telefono = doc.data().__zone_symbol__value.telefono;\n          userData.email = doc.data().__zone_symbol__value.email;\n        });\n        return userData;\n      });\n    }\n\n    logout() {\n      this.afAuth.signOut().then(() => {\n        this.authenticationState.next(false);\n        localStorage.removeItem(\"login\");\n        localStorage.removeItem(\"uidUser\");\n      });\n    }\n\n    isAuthenticated() {\n      var isAuthent;\n      isAuthent = this.authenticationState.value;\n      return isAuthent;\n    }\n\n    isAuthenticate() {\n      return this.authenticationState;\n    }\n\n    emailSignup(email, password) {\n      createUserWithEmailAndPassword(this.afAuth, email, password).then(value => {\n        console.log('Succes', value);\n      }).catch(error => {\n        console.log('Something went wrong: ', error);\n      });\n    }\n\n  }\n\n  UsuariosService.ɵfac = function UsuariosService_Factory(t) {\n    return new (t || UsuariosService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Firestore));\n  };\n\n  UsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuariosService;\n})();","map":null,"metadata":{},"sourceType":"module"}