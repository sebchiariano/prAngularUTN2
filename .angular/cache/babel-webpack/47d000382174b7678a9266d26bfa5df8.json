{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport 'rxjs/add/operator/switchMap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let UsuariosService = /*#__PURE__*/(() => {\n  class UsuariosService {\n    constructor(afAuth, router) {\n      this.afAuth = afAuth;\n      this.router = router;\n      this.authenticationState = new BehaviorSubject(localStorage.getItem(\"login\") ? true : false);\n      this.userData = afAuth.authState;\n    }\n\n    login(email, password) {\n      this.authenticationState.next(true);\n      localStorage.setItem(\"login\", \"true\");\n    }\n\n    logout() {\n      this.authenticationState.next(false);\n      localStorage.removeItem(\"login\");\n    }\n\n    isAuthenticated() {\n      return this.authenticationState.getValue;\n    }\n\n    isAuthenticate() {\n      return this.authenticationState;\n    }\n\n  }\n\n  UsuariosService.ɵfac = function UsuariosService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  UsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuariosService;\n})();","map":null,"metadata":{},"sourceType":"module"}